name: Project_2_maven-web-app

on:
  workflow_dispatch:


jobs:
  build-push-run:
    runs-on: [self-hosted, linux, qa]

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: project_01_maven-web-app
      IMAGE_TAG: ${{ github.run_id }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Java 17 for Maven
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          cd Project-2
          mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          docker build -t $IMAGE_URI:latest -f Project-2/Dockerfile Project-2/

      - name: Push Docker image to ECR
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          docker push $IMAGE_URI:latest

      - name: Stop previous container if exists
        run: |
          docker stop $ECR_REPOSITORY || true
          docker rm $ECR_REPOSITORY || true

      - name: Run container on port 9090
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          docker run -d \
            --name $ECR_REPOSITORY \
            -p 9090:8080 \
            $IMAGE_URI:latest

      - name: Verify container is running
        run: docker ps
