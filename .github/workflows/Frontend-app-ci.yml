# âœ… Frontend CI Workflow with OIDC, Trivy, SHA tagging
name: Frontend CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'app/frontend-src/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: ecommerce-frontend

permissions:
  id-token: write
  contents: read

jobs:
  build-and-scan:
    runs-on: [self-hosted, linux, qa]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Node and dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build frontend app
        working-directory: app/frontend-src
        run: |
          npm ci
          npm run build

      - name: Create Docker image
        working-directory: app/frontend-src
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          REPO_SANITIZED=$(echo "${{ github.repository }}" | tr '/' '-')
          IMAGE_TAG="${REPO_SANITIZED}-${SHORT_SHA}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG .

      - name: Login to ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Push Docker image to ECR
        run: |
          docker tag $IMAGE_TAG ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Scan Docker image with Trivy
        run: |
          trivy image --severity HIGH,CRITICAL ${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Trigger CD Pipeline
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Frontend CD Pipeline (EKS)
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: main
          inputs: |
            image_tag: ${{ env.IMAGE_TAG }}
