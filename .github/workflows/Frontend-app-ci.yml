name: Frontend CI Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'app/frontend-src/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: write

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: ecommerce-frontend
  DEPLOY_NAMESPACE: develop

jobs:
  frontend-ci:
    runs-on: [self-hosted, linux, qa]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set deployment namespace
        run: |
          if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "DEPLOY_NAMESPACE=develop" >> $GITHUB_ENV
          else
            echo "DEPLOY_NAMESPACE=default" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image tag
        id: meta
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          SAFE_REPO=$(echo "${GITHUB_REPOSITORY}" | tr '/' '-')
          IMAGE_TAG="${SAFE_REPO}-${SHORT_SHA}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "::set-output name=image_tag::$IMAGE_TAG"

      - name: Build Docker image
        working-directory: app/frontend-src
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker tag $IMAGE_URI ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Trigger CD workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Frontend CD Pipeline (EKS)
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ github.ref_name }}
          inputs: |
            image_tag: ${{ steps.meta.outputs.image_tag }}
            namespace: ${{ env.DEPLOY_NAMESPACE }}
