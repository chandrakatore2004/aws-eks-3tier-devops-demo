name: Playwright E2E Tests

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  playwright-tests:
    runs-on: [self-hosted, linux, qa]
    env:
      AWS_REGION: ap-south-1
      ECR_REPO: playwright-tests
      IMAGE_TAG: latest
      TEST_ENVIRONMENT: dev

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4. Check if image already exists in ECR
      - name: Check ECR for existing image
        id: check-image
        run: |
          IMAGE_EXISTS=$(aws ecr describe-images \
            --repository-name $ECR_REPO \
            --image-ids imageTag=$IMAGE_TAG \
            --region $AWS_REGION \
            --query 'imageDetails[0]' --output text 2>/dev/null || true)

          if [ "$IMAGE_EXISTS" != "None" ] && [ -n "$IMAGE_EXISTS" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # 5. Build and push image only if not exists
      - name: Build & Push Docker image
        if: steps.check-image.outputs.exists == 'false'
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG ./playwright_automation
          docker tag $ECR_REPO:$IMAGE_TAG \
            ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      # 6. Run tests in container
      - name: Run Playwright tests
        run: |
          docker run --rm \
            -e TEST_ENVIRONMENT=${{ env.TEST_ENVIRONMENT }} \
            ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      # 7. Upload HTML report (optional)
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
