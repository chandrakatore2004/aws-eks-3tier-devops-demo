name: Backend CI Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'app/backend-src/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: write

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: ecommerce-backend
  SONAR_PROJECT_KEY: chandrakatore2004_aws-eks-3tier-devops-demo
  DEPLOY_NAMESPACE: develop

jobs:
  backend-ci:
    runs-on: [self-hosted, linux, qa]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set deployment namespace
        run: |
          if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "DEPLOY_NAMESPACE=develop" >> $GITHUB_ENV
          else
            echo "DEPLOY_NAMESPACE=default" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image tag
        id: meta
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          SAFE_REPO=$(echo "${GITHUB_REPOSITORY}" | tr '/' '-')
          IMAGE_TAG="${SAFE_REPO}-${SHORT_SHA}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "::set-output name=image_tag::$IMAGE_TAG"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: app/backend-src
        run: mvn clean install

      - name: Run SonarCloud Analysis
        working-directory: app/backend-src
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=chandrakatore2004 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Quality Gate Check
        continue-on-error: true
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: app/backend-src/target/sonar/report-task.txt
          pollingTimeoutSec: 300
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build, scan, tag, and push Docker image
        working-directory: app/backend-src
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_URI -t ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest .
          trivy image --exit-code 1 --severity CRITICAL --no-progress $IMAGE_URI
          docker push $IMAGE_URI
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Trigger CD workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Backend CD Pipeline (EKS)
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ github.ref_name }}
          inputs: >-
            {
              "image_tag": "${{ steps.meta.outputs.image_tag }}",
              "namespace": "${{ env.DEPLOY_NAMESPACE }}"
            }

      - name: 🚀 Generate GitHub Actions Job Summary
        run: |
          {
            echo "## 🧪 CI/CD Summary"
            echo ""
            echo "**Branch:** \`${{ github.ref_name }}\`"
            echo "**Namespace:** \`${{ env.DEPLOY_NAMESPACE }}\`"
            echo "**Image Tag:** \`${{ env.IMAGE_TAG }}\`"
            echo ""
            echo "### 📋 CI Steps Status"
            echo ""
            echo "| Step                 | Status                       |"
            echo "|----------------------|------------------------------|"
            echo "|  Maven Build        | ✅ Success                    |"
            echo "| SonarCloud Analysis | ✅ Submitted to dashboard     |"
            echo "| Docker Build/Push   | ✅ Image tagged and pushed    |"
            echo "|  Trivy Scan          | ⚠️ Run with CRITICAL severity blocking |"
            echo ""
            echo "### 📦 Docker Image"
            echo ""
            echo "\`\`\`"
            echo "***.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
            echo "\`\`\`"
            echo ""
            echo "### 🚀 CD Workflow"
            echo ""
            echo "**Triggered:** Backend CD Pipeline (EKS)"
            echo ""
            echo "🔗 [View Deployment Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          } >> $GITHUB_STEP_SUMMARY




